name: Migrate DB Schema

on:
  push:
    branches:
      - master
    paths:
      - 'src/migrations/**'
  pull_request:
    branches:
      - master
    paths:
      - 'src/migrations/**'
  workflow_dispatch:

jobs:
  Test:
    name: Test db migration using all migration files
    runs-on: ubuntu-latest
    container: node:14.15.4-alpine
    services:
      # Label used to access the service container
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: pass
          POSTGRES_DB: upline
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Cache npm caches
        uses: actions/cache@v2.1.3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci
      - name: Run DB migration
        run: DB_HOST=postgres DB_PORT=5432 DB_USER=postgres DB_PASSWORD=pass DB_NAME=upline npm run migrate-db:run

DeployStaging:
  name: Deploy the schema change to RDS stag DB
  needs: [Test]
  runs-on: ubuntu-latest
  environment:
    name: Staging
  steps:
    - name: Backup target DB
    - name: Run migration
